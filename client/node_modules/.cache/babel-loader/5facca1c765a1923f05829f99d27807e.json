{"ast":null,"code":"var _jsxFileName = \"/Users/rickhuang/WebstormProjects/TaskList-Mern/client/src/pages/TaskShow.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { showSingleTask, completeSingleTask } from \"../features/tasks/taskSlice\";\nimport HomeButton from \"../components/HomeButton\";\nimport SpinnerComponent from \"../components/Spinner\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskShowPage = () => {\n  _s();\n\n  const {\n    task,\n    isError,\n    isLoading,\n    message\n  } = useSelector(state => state.task);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    taskId\n  } = useParams();\n  useEffect(() => {\n    if (isError) {\n      toast.error(message);\n    }\n\n    dispatch(showSingleTask(taskId)); //\t eslint-disable-next-line\n  }, [isError, message, taskId]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(SpinnerComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"No Task Show Here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this);\n  }\n\n  const handleComplete = () => {\n    dispatch(completeSingleTask(taskId));\n    toast.success('Task completed');\n    navigate('/tasks');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'ticket-page',\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"ticket-header\",\n      children: [/*#__PURE__*/_jsxDEV(HomeButton, {\n        url: '/tasks'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Task ID: \", task && task._id, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `status status-${task.status}`,\n          children: task.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Submission Date: \", new Date(task.createdAt).toLocaleDateString('en-AU')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticket-desc\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), task.status !== 'completed' && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: 'btn btn-block btn-danger',\n      onClick: handleComplete,\n      children: \"Complete Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TaskShowPage, \"mJjD7hm/q0GAquA2JWEjw3+4bP8=\", false, function () {\n  return [useSelector, useDispatch, useNavigate, useParams];\n});\n\n_c = TaskShowPage;\nexport default TaskShowPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskShowPage\");","map":{"version":3,"sources":["/Users/rickhuang/WebstormProjects/TaskList-Mern/client/src/pages/TaskShow.tsx"],"names":["React","useEffect","useSelector","useDispatch","useParams","useNavigate","showSingleTask","completeSingleTask","HomeButton","SpinnerComponent","toast","TaskShowPage","task","isError","isLoading","message","state","dispatch","navigate","taskId","error","handleComplete","success","_id","status","Date","createdAt","toLocaleDateString","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,SAAR,EAAmBC,WAAnB,QAAqC,kBAArC;AACA,SAAQC,cAAR,EAAwBC,kBAAxB,QAAiD,6BAAjD;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AAEA,SAAQC,KAAR,QAAoB,gBAApB;;;AAGA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAE1B,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA;AAA3B,MAAsCb,WAAW,CAAEc,KAAD,IAAsBA,KAAK,CAACJ,IAA7B,CAAvD;AACA,QAAMK,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,QAAQ,GAAGb,WAAW,EAA5B;AAGA,QAAM;AAACc,IAAAA;AAAD,MAAWf,SAAS,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIY,OAAJ,EAAa;AACZH,MAAAA,KAAK,CAACU,KAAN,CAAYL,OAAZ;AACA;;AAEDE,IAAAA,QAAQ,CAACX,cAAc,CAACa,MAAD,CAAf,CAAR,CALe,CAMhB;AACC,GAPQ,EAON,CAACN,OAAD,EAAUE,OAAV,EAAmBI,MAAnB,CAPM,CAAT;;AASA,MAAIL,SAAJ,EAAe;AACd,wBAAO,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AAED,MAAID,OAAJ,EAAa;AACZ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AAED,QAAMQ,cAAc,GAAG,MAAM;AAC5BJ,IAAAA,QAAQ,CAACV,kBAAkB,CAACY,MAAD,CAAnB,CAAR;AACAT,IAAAA,KAAK,CAACY,OAAN,CAAc,gBAAd;AACAJ,IAAAA,QAAQ,CAAC,QAAD,CAAR;AACA,GAJD;;AAMA,sBACC;AAAK,IAAA,SAAS,EAAE,aAAhB;AAAA,4BACC;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAA,8BACC,QAAC,UAAD;AAAY,QAAA,GAAG,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA,gCACWN,IAAI,IAAIA,IAAI,CAACW,GADxB,eAEC;AAAM,UAAA,SAAS,EAAG,iBAAgBX,IAAI,CAACY,MAAO,EAA9C;AAAA,oBACEZ,IAAI,CAACY;AADP;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eAQC;AAAA,wCAAsB,IAAIC,IAAJ,CAASb,IAAI,CAACc,SAAd,EAAmCC,kBAAnC,CAAsD,OAAtD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cARD,eASC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAA,oBAAIf,IAAI,CAACgB;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cATD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAiBEhB,IAAI,CAACY,MAAL,KAAgB,WAAhB,iBACC;AACC,MAAA,SAAS,EAAE,0BADZ;AAEC,MAAA,OAAO,EAAEH,cAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA2BA,CA3DD;;GAAMV,Y;UAEuCT,W,EAC3BC,W,EACAE,W,EAGAD,S;;;KAPZO,Y;AA6DN,eAAeA,YAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {useParams, useNavigate} from \"react-router-dom\";\nimport {showSingleTask, completeSingleTask} from \"../features/tasks/taskSlice\";\nimport HomeButton from \"../components/HomeButton\";\nimport SpinnerComponent from \"../components/Spinner\";\nimport {RootState} from \"../app/store\";\nimport {toast} from \"react-toastify\";\n\n\nconst TaskShowPage = () => {\n\n\tconst {task, isError, isLoading, message} = useSelector((state: RootState) => state.task);\n\tconst dispatch = useDispatch();\n\tconst navigate = useNavigate();\n\n\n\tconst {taskId} = useParams();\n\n\tuseEffect(() => {\n\t\tif (isError) {\n\t\t\ttoast.error(message)\n\t\t}\n\n\t\tdispatch(showSingleTask(taskId!))\n\t//\t eslint-disable-next-line\n\t}, [isError, message, taskId])\n\n\tif (isLoading) {\n\t\treturn <SpinnerComponent />\n\t}\n\n\tif (isError) {\n\t\treturn <h3>No Task Show Here...</h3>\n\t}\n\n\tconst handleComplete = () => {\n\t\tdispatch(completeSingleTask(taskId!))\n\t\ttoast.success('Task completed');\n\t\tnavigate('/tasks')\n\t}\n\n\treturn (\n\t\t<div className={'ticket-page'}>\n\t\t\t<header className=\"ticket-header\">\n\t\t\t\t<HomeButton url={'/tasks'} />\n\t\t\t\t<h2>\n\t\t\t\t\tTask ID: {task && task._id}\n\t\t\t\t\t<span className={`status status-${task.status}`}>\n\t\t\t\t\t\t{task.status}\n\t\t\t\t\t</span>\n\t\t\t\t</h2>\n\t\t\t\t<h3>Submission Date: {new Date(task.createdAt as string).toLocaleDateString('en-AU')}</h3>\n\t\t\t\t<div className=\"ticket-desc\">\n\t\t\t\t\t<h3>Description</h3>\n\t\t\t\t\t<p>{task.description}</p>\n\t\t\t\t</div>\n\t\t\t</header>\n\n\t\t\t{\n\t\t\t\ttask.status !== 'completed' && (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={'btn btn-block btn-danger'}\n\t\t\t\t\t\tonClick={handleComplete}\n\t\t\t\t\t>Complete Task</button>\n\t\t\t\t)\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default TaskShowPage;\n"]},"metadata":{},"sourceType":"module"}