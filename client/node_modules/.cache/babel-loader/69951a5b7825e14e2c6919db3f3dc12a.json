{"ast":null,"code":"import axios from \"axios\";\nconst API_URI = '/api/tasks/';\n\nconst showNotes = async (id, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.get(API_URI + id + '/notes', config);\n  return response.data;\n};\n/**\n * @desc connect with server on noteController\n * @param text\n * @param id\n * @param token\n */\n\n\nconst createNote = async (text, id, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.post(API_URI + id + '/notes', {\n    text\n  }, config);\n  return response.data;\n};\n\nconst noteService = {\n  showNotes,\n  createNote\n};\nexport default noteService;","map":{"version":3,"sources":["/Users/rickhuang/WebstormProjects/TaskList-Mern/client/src/features/notes/noteService.ts"],"names":["axios","API_URI","showNotes","id","token","config","headers","Authorization","response","get","data","createNote","text","post","noteService"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,aAAhB;;AAEA,MAAMC,SAAS,GAAG,OAAOC,EAAP,EAAmBC,KAAnB,KAAqC;AACtD,QAAMC,MAAM,GAAG;AACdC,IAAAA,OAAO,EAAE;AACRC,MAAAA,aAAa,EAAG,UAASH,KAAM;AADvB;AADK,GAAf;AAMA,QAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUR,OAAO,GAAGE,EAAV,GAAe,QAAzB,EAAmCE,MAAnC,CAAvB;AAEA,SAAOG,QAAQ,CAACE,IAAhB;AACA,CAVD;AAYA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,UAAU,GAAG,OAAOC,IAAP,EAAqBT,EAArB,EAAiCC,KAAjC,KAAmD;AACrE,QAAMC,MAAM,GAAG;AACdC,IAAAA,OAAO,EAAE;AACRC,MAAAA,aAAa,EAAG,UAASH,KAAM;AADvB;AADK,GAAf;AAMA,QAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACa,IAAN,CAAWZ,OAAO,GAAGE,EAAV,GAAe,QAA1B,EAAoC;AAC1DS,IAAAA;AAD0D,GAApC,EAEpBP,MAFoB,CAAvB;AAIA,SAAOG,QAAQ,CAACE,IAAhB;AACA,CAZD;;AAcA,MAAMI,WAAW,GAAG;AACnBZ,EAAAA,SADmB;AACRS,EAAAA;AADQ,CAApB;AAIA,eAAeG,WAAf","sourcesContent":["\nimport axios from \"axios\";\n\nconst API_URI = '/api/tasks/'\n\nconst showNotes = async (id: string, token: string) => {\n\tconst config = {\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t}\n\t};\n\n\tconst response = await axios.get(API_URI + id + '/notes', config);\n\n\treturn response.data;\n}\n\n/**\n * @desc connect with server on noteController\n * @param text\n * @param id\n * @param token\n */\nconst createNote = async (text: string, id: string, token: string) => {\n\tconst config = {\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t}\n\t};\n\n\tconst response = await axios.post(API_URI + id + '/notes', {\n\t\ttext\n\t}, config);\n\n\treturn response.data;\n}\n\nconst noteService = {\n\tshowNotes, createNote\n}\n\nexport default noteService\n"]},"metadata":{},"sourceType":"module"}