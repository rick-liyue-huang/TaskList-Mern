{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  user: null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\n/**\n * @\n */\n\nexport const register = createAsyncThunk('auth/register', async (user, thunkApi) => {\n  console.log(user);\n});\nexport const login = createAsyncThunk('auth/login', async (user, thunkApi) => {\n  console.log(user);\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {}\n});\nexport default authSlice.reducer;","map":{"version":3,"sources":["/Users/rickhuang/WebstormProjects/TaskList-Mern/client/src/features/auth/authSlice.ts"],"names":["createSlice","createAsyncThunk","initialState","user","isError","isSuccess","isLoading","message","register","thunkApi","console","log","login","authSlice","name","reducers","extraReducers","builder","reducer"],"mappings":"AACA,SAAQA,WAAR,EAAqBC,gBAArB,QAA4C,kBAA5C;AAGA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAE,IADc;AAEpBC,EAAAA,OAAO,EAAE,KAFW;AAGpBC,EAAAA,SAAS,EAAE,KAHS;AAIpBC,EAAAA,SAAS,EAAE,KAJS;AAKpBC,EAAAA,OAAO,EAAE;AALW,CAArB;AAQA;AACA;AACA;;AACA,OAAO,MAAMC,QAAQ,GAAGP,gBAAgB,CAAC,eAAD,EAAkB,OAAOE,IAAP,EAAkCM,QAAlC,KAA+C;AACxGC,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACA,CAFuC,CAAjC;AAIP,OAAO,MAAMS,KAAK,GAAGX,gBAAgB,CAAC,YAAD,EAAe,OAAOE,IAAP,EAAkCM,QAAlC,KAA+C;AAClGC,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACA,CAFoC,CAA9B;AAMP,OAAO,MAAMU,SAAS,GAAGb,WAAW,CAAC;AACpCc,EAAAA,IAAI,EAAE,MAD8B;AAEpCZ,EAAAA,YAFoC;AAGpCa,EAAAA,QAAQ,EAAE,EAH0B;AAIpCC,EAAAA,aAAa,EAAGC,OAAD,IAAa,CAAE;AAJM,CAAD,CAA7B;AAOP,eAAeJ,SAAS,CAACK,OAAzB","sourcesContent":["\nimport {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\n\n\nconst initialState = {\n\tuser: null,\n\tisError: false,\n\tisSuccess: false,\n\tisLoading: false,\n\tmessage: ''\n};\n\n/**\n * @\n */\nexport const register = createAsyncThunk('auth/register', async (user: Record<string, any>, thunkApi) => {\n\tconsole.log(user);\n});\n\nexport const login = createAsyncThunk('auth/login', async (user: Record<string, any>, thunkApi) => {\n\tconsole.log(user);\n});\n\n\n\nexport const authSlice = createSlice({\n\tname: 'auth',\n\tinitialState,\n\treducers: {},\n\textraReducers: (builder) => {}\n});\n\nexport default authSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}