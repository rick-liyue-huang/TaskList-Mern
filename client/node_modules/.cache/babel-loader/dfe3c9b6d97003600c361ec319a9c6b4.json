{"ast":null,"code":"var _jsxFileName = \"/Users/rickhuang/WebstormProjects/TaskList-Mern/client/src/pages/NewTask.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport SpinnerComponent from \"../components/Spinner\";\nimport { createNewTask, reset } from \"../features/tasks/taskSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewTaskPage = () => {\n  _s();\n\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const {\n    isLoading,\n    isError,\n    isSuccess,\n    message,\n    task\n  } = useSelector(state => state.task);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [name] = useState(user === null || user === void 0 ? void 0 : user.name);\n  const [email] = useState(user === null || user === void 0 ? void 0 : user.email);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(createNewTask({\n      title,\n      description\n    }));\n  };\n\n  useEffect(() => {\n    if (isError) {\n      toast.error(message);\n    }\n\n    if (isSuccess) {\n      dispatch(reset());\n      navigate('/tasks');\n    }\n\n    dispatch(reset());\n  }, [dispatch, isError, isSuccess, navigate, message]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(SpinnerComponent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: 'heading',\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CREATE NEW TASK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please create the task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: 'form',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"User Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: name,\n          disabled: true,\n          id: 'name'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"User Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: email,\n          disabled: true,\n          id: 'email'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'form-group',\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: 'form-control',\n            type: \"text\",\n            id: 'title',\n            placeholder: 'Please input title',\n            name: 'title',\n            value: title,\n            onChange: e => setTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'form-group',\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: 'form-control',\n            id: 'description',\n            placeholder: 'talk more about it',\n            name: 'description',\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'btn btn-block',\n            children: \"CREATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewTaskPage, \"/W/92us0HWZyUmd/ZAEtxIaFSNA=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useNavigate];\n});\n\n_c = NewTaskPage;\nexport default NewTaskPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTaskPage\");","map":{"version":3,"sources":["/Users/rickhuang/WebstormProjects/TaskList-Mern/client/src/pages/NewTask.tsx"],"names":["React","useState","useEffect","useSelector","useDispatch","useNavigate","toast","SpinnerComponent","createNewTask","reset","NewTaskPage","user","state","auth","isLoading","isError","isSuccess","message","task","dispatch","navigate","name","email","title","setTitle","description","setDescription","handleSubmit","e","preventDefault","error","target","value"],"mappings":"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","sourcesContent":["import React, {ChangeEvent, FormEvent, useState, useEffect} from 'react';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {RootState} from \"../app/store\";\nimport {useNavigate} from \"react-router-dom\";\nimport {toast} from \"react-toastify\";\nimport SpinnerComponent from \"../components/Spinner\";\nimport {createNewTask, reset} from \"../features/tasks/taskSlice\";\n\n\nconst NewTaskPage = () => {\n\n\tconst {user} = useSelector((state: RootState) => state.auth);\n\tconst {isLoading, isError, isSuccess, message, task} = useSelector((state: RootState) => state.task);\n\n\tconst dispatch = useDispatch();\n\tconst navigate = useNavigate();\n\n\tconst [name] = useState(user?.name);\n\tconst [email] = useState(user?.email);\n\tconst [title, setTitle] = useState('');\n\tconst [description, setDescription] = useState('');\n\n\tconst handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault();\n\t\tdispatch(createNewTask({\n\t\t\ttitle, description\n\t\t}))\n\t}\n\n\tuseEffect(() => {\n\t\tif (isError) {\n\t\t\ttoast.error(message)\n\t\t}\n\n\t\tif (isSuccess) {\n\t\t\tdispatch(reset());\n\t\t\tnavigate('/tasks')\n\t\t}\n\t\tdispatch(reset())\n\t}, [dispatch, isError, isSuccess, navigate, message])\n\n\n\tif (isLoading) return <SpinnerComponent />\n\treturn (\n\t\t<>\n\n\t\t\t<section className={'heading'}>\n\t\t\t\t<h1>CREATE NEW TASK</h1>\n\t\t\t\t<p>Please create the task</p>\n\t\t\t</section>\n\n\t\t\t<section className={'form'}>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"name\">User Name</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\" className=\"form-control\"\n\t\t\t\t\t\tvalue={name} disabled id={'name'}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"email\">User Email</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\" className=\"form-control\"\n\t\t\t\t\t\tvalue={email} disabled id={'email'}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t<div className={'form-group'}>\n\t\t\t\t\t\t<label htmlFor=\"title\">Title</label>\n\t\t\t\t\t\t<input className={'form-control'}\n\t\t\t\t\t\t\ttype=\"text\" id={'title'} placeholder={'Please input title'} name={'title'}\n\t\t\t\t\t\t\tvalue={title} onChange={(e: ChangeEvent<HTMLInputElement>) => setTitle(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'form-group'}>\n\t\t\t\t\t\t<label htmlFor=\"description\">Description</label>\n\t\t\t\t\t\t<textarea className={'form-control'}\n\t\t\t\t\t\t\tid={'description'} placeholder={'talk more about it'} name={'description'}\n\t\t\t\t\t\t\tvalue={description} onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setDescription(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<button className={'btn btn-block'}>CREATE</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</section>\n\t\t</>\n\t);\n};\n\nexport default NewTaskPage;\n"]},"metadata":{},"sourceType":"module"}