{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { authService } from \"./authService\";\nconst initialState = {\n  user: null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\n/**\n * @desc register user\n */\n\nexport const register = createAsyncThunk('auth/register', async (user, thunkApi) => {\n  // console.log(user);\n  try {\n    return await authService.register(user);\n  } catch (err) {\n    const message = err.response && err.response.data && err.response.data.message || err.message || err.toString();\n    return thunkApi.rejectWithValue(message);\n  }\n});\n/**\n * @desc login user\n */\n\nexport const login = createAsyncThunk('auth/login', async (user, thunkApi) => {\n  console.log(user);\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {}\n});\nexport default authSlice.reducer;","map":{"version":3,"sources":["/Users/rickhuang/WebstormProjects/TaskList-Mern/client/src/features/auth/authSlice.ts"],"names":["createSlice","createAsyncThunk","authService","initialState","user","isError","isSuccess","isLoading","message","register","thunkApi","err","response","data","toString","rejectWithValue","login","console","log","authSlice","name","reducers","extraReducers","builder","reducer"],"mappings":"AACA,SAAQA,WAAR,EAAqBC,gBAArB,QAA4C,kBAA5C;AACA,SAAQC,WAAR,QAA0B,eAA1B;AAGA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAE,IADc;AAEpBC,EAAAA,OAAO,EAAE,KAFW;AAGpBC,EAAAA,SAAS,EAAE,KAHS;AAIpBC,EAAAA,SAAS,EAAE,KAJS;AAKpBC,EAAAA,OAAO,EAAE;AALW,CAArB;AAQA;AACA;AACA;;AACA,OAAO,MAAMC,QAAQ,GAAGR,gBAAgB,CAAC,eAAD,EAAkB,OAAOG,IAAP,EAAkCM,QAAlC,KAA+C;AACxG;AAEA,MAAI;AACH,WAAO,MAAMR,WAAW,CAACO,QAAZ,CAAqBL,IAArB,CAAb;AACA,GAFD,CAEE,OAAOO,GAAP,EAAY;AACb,UAAMH,OAAO,GAAIG,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,CAAaC,IAA7B,IAAqCF,GAAG,CAACC,QAAJ,CAAaC,IAAb,CAAkBL,OAAxD,IAAoEG,GAAG,CAACH,OAAxE,IAAmFG,GAAG,CAACG,QAAJ,EAAnG;AAEA,WAAOJ,QAAQ,CAACK,eAAT,CAAyBP,OAAzB,CAAP;AACA;AAGD,CAZuC,CAAjC;AAcP;AACA;AACA;;AACA,OAAO,MAAMQ,KAAK,GAAGf,gBAAgB,CAAC,YAAD,EAAe,OAAOG,IAAP,EAAkCM,QAAlC,KAA+C;AAClGO,EAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACA,CAFoC,CAA9B;AAMP,OAAO,MAAMe,SAAS,GAAGnB,WAAW,CAAC;AACpCoB,EAAAA,IAAI,EAAE,MAD8B;AAEpCjB,EAAAA,YAFoC;AAGpCkB,EAAAA,QAAQ,EAAE,EAH0B;AAIpCC,EAAAA,aAAa,EAAGC,OAAD,IAAa,CAAE;AAJM,CAAD,CAA7B;AAOP,eAAeJ,SAAS,CAACK,OAAzB","sourcesContent":["\nimport {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\nimport {authService} from \"./authService\";\n\n\nconst initialState = {\n\tuser: null,\n\tisError: false,\n\tisSuccess: false,\n\tisLoading: false,\n\tmessage: ''\n};\n\n/**\n * @desc register user\n */\nexport const register = createAsyncThunk('auth/register', async (user: Record<string, any>, thunkApi) => {\n\t// console.log(user);\n\n\ttry {\n\t\treturn await authService.register(user)\n\t} catch (err) {\n\t\tconst message = (err.response && err.response.data && err.response.data.message) || err.message || err.toString();\n\n\t\treturn thunkApi.rejectWithValue(message)\n\t}\n\n\n});\n\n/**\n * @desc login user\n */\nexport const login = createAsyncThunk('auth/login', async (user: Record<string, any>, thunkApi) => {\n\tconsole.log(user);\n});\n\n\n\nexport const authSlice = createSlice({\n\tname: 'auth',\n\tinitialState,\n\treducers: {},\n\textraReducers: (builder) => {}\n});\n\nexport default authSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}