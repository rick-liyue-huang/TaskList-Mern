{"ast":null,"code":"var _jsxFileName = \"/Users/rickhuang/WebstormProjects/TaskList-Mern/client/src/pages/TaskShow.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { showSingleTask } from \"../features/tasks/taskSlice\";\nimport SpinnerComponent from \"../components/Spinner\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskShowPage = () => {\n  _s();\n\n  const {\n    task,\n    isError,\n    isSuccess,\n    isLoading,\n    message\n  } = useSelector(state => state.task);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    taskId\n  } = useParams();\n  useEffect(() => {\n    if (isError) {\n      toast.error(message);\n    }\n\n    dispatch(showSingleTask(taskId));\n  }, [isError, message, taskId]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(SpinnerComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"No Task Show Here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Task\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TaskShowPage, \"gHQ5reW/rqXkgv8uXCMEmFAGjvA=\", false, function () {\n  return [useSelector, useDispatch, useNavigate, useParams];\n});\n\n_c = TaskShowPage;\nexport default TaskShowPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskShowPage\");","map":{"version":3,"sources":["/Users/rickhuang/WebstormProjects/TaskList-Mern/client/src/pages/TaskShow.tsx"],"names":["React","useEffect","useSelector","useDispatch","useNavigate","useParams","showSingleTask","SpinnerComponent","toast","TaskShowPage","task","isError","isSuccess","isLoading","message","state","dispatch","navigate","taskId","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,WAAR,EAAqBC,SAArB,QAAqC,kBAArC;AACA,SAAQC,cAAR,QAAoC,6BAApC;AAEA,OAAOC,gBAAP,MAA6B,uBAA7B;AAEA,SAAQC,KAAR,QAAoB,gBAApB;;;AAIA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAE1B,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA,SAA3B;AAAsCC,IAAAA;AAAtC,MAAiDZ,WAAW,CAAEa,KAAD,IAAsBA,KAAK,CAACL,IAA7B,CAAlE;AACA,QAAMM,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,QAAQ,GAAEb,WAAW,EAA3B;AAEA,QAAM;AAACc,IAAAA;AAAD,MAAWb,SAAS,EAA1B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIU,OAAJ,EAAa;AACZH,MAAAA,KAAK,CAACW,KAAN,CAAYL,OAAZ;AACA;;AAEDE,IAAAA,QAAQ,CAACV,cAAc,CAACY,MAAD,CAAf,CAAR;AACA,GANQ,EAMN,CAACP,OAAD,EAAUG,OAAV,EAAmBI,MAAnB,CANM,CAAT;;AAQA,MAAIL,SAAJ,EAAe;AACd,wBAAO,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AAED,MAAIF,OAAJ,EAAa;AACZ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AAED,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CA7BD;;GAAMF,Y;UAEkDP,W,EACtCC,W,EACDC,W,EAECC,S;;;KANZI,Y;AA+BN,eAAeA,YAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport {showSingleTask, reset} from \"../features/tasks/taskSlice\";\nimport HomeButton from \"../components/HomeButton\";\nimport SpinnerComponent from \"../components/Spinner\";\nimport {RootState} from \"../app/store\";\nimport {toast} from \"react-toastify\";\nimport taskItem from \"../components/TaskItem\";\n\n\nconst TaskShowPage = () => {\n\n\tconst {task, isError, isSuccess, isLoading, message} = useSelector((state: RootState) => state.task);\n\tconst dispatch = useDispatch();\n\tconst navigate= useNavigate();\n\n\tconst {taskId} = useParams();\n\n\tuseEffect(() => {\n\t\tif (isError) {\n\t\t\ttoast.error(message)\n\t\t}\n\n\t\tdispatch(showSingleTask(taskId!))\n\t}, [isError, message, taskId])\n\n\tif (isLoading) {\n\t\treturn <SpinnerComponent />\n\t}\n\n\tif (isError) {\n\t\treturn <h3>No Task Show Here...</h3>\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\tTask\n\t\t</div>\n\t);\n};\n\nexport default TaskShowPage;\n"]},"metadata":{},"sourceType":"module"}