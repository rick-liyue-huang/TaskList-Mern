{"ast":null,"code":"var _jsxFileName = \"/Users/rickhuang/WebstormProjects/TaskList-Mern/client/src/pages/TaskShow.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { showSingleTask, completeSingleTask } from \"../features/tasks/taskSlice\";\nimport HomeButton from \"../components/HomeButton\";\nimport SpinnerComponent from \"../components/Spinner\";\nimport { toast } from \"react-toastify\";\nimport { showNotes, createNote } from \"../features/notes/noteSlice\";\nimport NoteItem from '../components/NoteItem';\nimport Modal from 'react-modal';\nimport { FaPlus } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  content: {\n    width: '600px',\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    position: 'relative'\n  }\n};\nModal.setAppElement('#root');\n\nconst TaskShowPage = () => {\n  _s();\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [noteText, setNoteText] = useState('');\n  const {\n    task,\n    isError,\n    isLoading,\n    message\n  } = useSelector(state => state.task);\n  const {\n    notes,\n    isLoading: isNoteLoading\n  } = useSelector(state => state.note);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    taskId\n  } = useParams();\n  useEffect(() => {\n    if (isError) {\n      toast.error(message);\n    }\n\n    dispatch(showSingleTask(taskId));\n    dispatch(showNotes(taskId)); //\t eslint-disable-next-line\n  }, [isError, message, taskId]);\n\n  if (isLoading || isNoteLoading) {\n    return /*#__PURE__*/_jsxDEV(SpinnerComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"No Task Show Here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }, this);\n  }\n\n  const handleComplete = () => {\n    dispatch(completeSingleTask(taskId));\n    toast.success('Task completed');\n    navigate('/tasks');\n  };\n\n  const handleOpenModal = () => {\n    setModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n  };\n\n  const handleNoteFormSubmit = e => {\n    e.preventDefault();\n    dispatch(createNote({\n      noteText,\n      taskId\n    }));\n    handleCloseModal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'ticket-page',\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"ticket-header\",\n      children: [/*#__PURE__*/_jsxDEV(HomeButton, {\n        url: '/tasks'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Task ID: \", task && task._id, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `status status-${task.status}`,\n          children: task.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Submission Date: \", new Date(task.createdAt).toLocaleDateString('en-AU')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Title: \", task.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticket-desc\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this), task.status !== 'completed' && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOpenModal,\n      className: 'btn',\n      children: [/*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 58\n      }, this), \" Add Note\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalOpen,\n      onRequestClose: handleCloseModal,\n      style: customStyles,\n      contentLabel: 'ADD NOTE',\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ADD NOTE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'btn-close',\n        onClick: handleCloseModal,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleNoteFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"noteText\",\n            id: \"noteText\",\n            className: 'form-control',\n            placeholder: 'note text',\n            value: noteText,\n            onChange: e => setNoteText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: 'btn',\n            type: 'submit',\n            children: \"Create Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }, this), notes.map(note => /*#__PURE__*/_jsxDEV(NoteItem, {\n      note: note\n    }, note._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 6\n    }, this)), task.status !== 'completed' && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: 'btn btn-block btn-danger',\n      onClick: handleComplete,\n      children: \"Complete Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TaskShowPage, \"JfcENI0s+ysWPar7AMJKEkhaRXo=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useNavigate, useParams];\n});\n\n_c = TaskShowPage;\nexport default TaskShowPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskShowPage\");","map":{"version":3,"sources":["/Users/rickhuang/WebstormProjects/TaskList-Mern/client/src/pages/TaskShow.tsx"],"names":["React","useEffect","useState","useSelector","useDispatch","useParams","useNavigate","showSingleTask","completeSingleTask","HomeButton","SpinnerComponent","toast","showNotes","createNote","NoteItem","Modal","FaPlus","customStyles","content","width","top","left","right","bottom","marginRight","transform","position","setAppElement","TaskShowPage","modalOpen","setModalOpen","noteText","setNoteText","task","isError","isLoading","message","state","notes","isNoteLoading","note","dispatch","navigate","taskId","error","handleComplete","success","handleOpenModal","handleCloseModal","handleNoteFormSubmit","e","preventDefault","_id","status","Date","createdAt","toLocaleDateString","title","description","target","value","map"],"mappings":"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","sourcesContent":["import React, {FormEvent, useEffect, useState} from 'react';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {useParams, useNavigate} from \"react-router-dom\";\nimport {showSingleTask, completeSingleTask, showAllTasks} from \"../features/tasks/taskSlice\";\nimport HomeButton from \"../components/HomeButton\";\nimport SpinnerComponent from \"../components/Spinner\";\nimport {RootState} from \"../app/store\";\nimport {toast} from \"react-toastify\";\nimport {showNotes, reset as noteReset, createNote} from \"../features/notes/noteSlice\";\nimport NoteItem from '../components/NoteItem';\nimport Modal, {Styles} from 'react-modal';\nimport {FaPlus} from \"react-icons/fa\";\n\n\nconst customStyles: Styles = {\n\tcontent: {\n\t\twidth: '600px',\n\t\ttop: '50%',\n\t\tleft: '50%',\n\t\tright: 'auto',\n\t\tbottom: 'auto',\n\t\tmarginRight: '-50%',\n\t\ttransform: 'translate(-50%, -50%)',\n\t\tposition: 'relative'\n\n\t},\n}\n\nModal.setAppElement('#root')\n\n\nconst TaskShowPage = () => {\n\n\tconst [modalOpen, setModalOpen] = useState(false);\n\tconst [noteText, setNoteText] = useState('');\n\n\tconst {task, isError, isLoading, message} = useSelector((state: RootState) => state.task);\n\n\tconst {notes, isLoading: isNoteLoading} = useSelector((state: RootState) => state.note)\n\n\tconst dispatch = useDispatch();\n\tconst navigate = useNavigate();\n\n\n\tconst {taskId} = useParams();\n\n\tuseEffect(() => {\n\t\tif (isError) {\n\t\t\ttoast.error(message)\n\t\t}\n\n\t\tdispatch(showSingleTask(taskId!));\n\t\tdispatch(showNotes(taskId!))\n\n\t//\t eslint-disable-next-line\n\t}, [isError, message, taskId])\n\n\tif (isLoading || isNoteLoading) {\n\t\treturn <SpinnerComponent />\n\t}\n\n\tif (isError) {\n\t\treturn <h3>No Task Show Here...</h3>\n\t}\n\n\tconst handleComplete = () => {\n\t\tdispatch(completeSingleTask(taskId!))\n\t\ttoast.success('Task completed');\n\t\tnavigate('/tasks')\n\t}\n\n\tconst handleOpenModal = () => {\n\t\tsetModalOpen(true)\n\t}\n\n\tconst handleCloseModal = () => {\n\t\tsetModalOpen(false)\n\t}\n\n\tconst handleNoteFormSubmit = (e: FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault();\n\t\tdispatch(createNote({noteText, taskId}))\n\t\thandleCloseModal();\n\t}\n\n\treturn (\n\t\t<div className={'ticket-page'}>\n\t\t\t<header className=\"ticket-header\">\n\t\t\t\t<HomeButton url={'/tasks'} />\n\t\t\t\t<h2>\n\t\t\t\t\tTask ID: {task && task._id}\n\t\t\t\t\t<span className={`status status-${task.status}`}>\n\t\t\t\t\t\t{task.status}\n\t\t\t\t\t</span>\n\t\t\t\t</h2>\n\t\t\t\t<h3>Submission Date: {new Date(task.createdAt as string).toLocaleDateString('en-AU')}</h3>\n\t\t\t\t<h3>Title: {task.title}</h3>\n\t\t\t\t<div className=\"ticket-desc\">\n\t\t\t\t\t<h3>Description</h3>\n\t\t\t\t\t<p>{task.description}</p>\n\t\t\t\t</div>\n\t\t\t\t<h2>Notes</h2>\n\t\t\t</header>\n\n\t\t\t{\n\t\t\t\ttask.status !== 'completed' && (\n\t\t\t\t\t<button onClick={handleOpenModal} className={'btn'}><FaPlus /> Add Note</button>\n\t\t\t\t)\n\t\t\t}\n\n\t\t\t<Modal\n\t\t\t\tisOpen={modalOpen} onRequestClose={handleCloseModal} style={customStyles}\n\t\t\t\tcontentLabel={'ADD NOTE'}\n\t\t\t>\n\t\t\t\t<h2>ADD NOTE</h2>\n\t\t\t\t<button className={'btn-close'} onClick={handleCloseModal}>Close</button>\n\n\t\t\t\t<form onSubmit={handleNoteFormSubmit}>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tname=\"noteText\" id=\"noteText\" className={'form-control'}\n\t\t\t\t\t\t\tplaceholder={'note text'} value={noteText}\n\t\t\t\t\t\t\tonChange={(e) => setNoteText(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<button className={'btn'} type={'submit'} >Create Note</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</Modal>\n\n\t\t\t{\n\t\t\t\tnotes.map(note => (\n\t\t\t\t\t<NoteItem key={note._id} note={note} />\n\t\t\t\t))\n\t\t\t}\n\n\t\t\t{\n\t\t\t\ttask.status !== 'completed' && (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={'btn btn-block btn-danger'}\n\t\t\t\t\t\tonClick={handleComplete}\n\t\t\t\t\t>Complete Task</button>\n\t\t\t\t)\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default TaskShowPage;\n"]},"metadata":{},"sourceType":"module"}